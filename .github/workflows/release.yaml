name: Build Release

on:
  push:
    branches:
      - main

jobs:
  build-release-binaries:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        build-target: ['x86_64-unknown-linux-musl', 'aarch64-unknown-linux-musl']

    steps:
      - uses: actions/checkout@v3
      - name: Build Release Binaries
        uses: ./.github/actions/cargo-zigbuild
        with:
          target: ${{ matrix.build-target }}
          args: '--manifest-path enclaver/Cargo.toml --release --all-features'
      - name: Upload Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.build-target }}
          path: |
            enclaver/target/${{ matrix.build-target }}/release/enclaver
            enclaver/target/${{ matrix.build-target }}/release/enclaver-run
            enclaver/target/${{ matrix.build-target }}/release/odyn

  publish-images:
    if: github.repository == 'edgebitio/enclaver' && github.ref == 'refs/heads/main'
    needs: build-release-binaries
    runs-on: ubuntu-latest

    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
      - name: Download Binaries
        uses: actions/download-artifact@v3

      # Putting the binaries into a path whose name exactly matches Docker's
      # architecture naming conventions makes it easy for the Dockerfiles to
      # COPY architecture-specific files into the image in a nice, cacheable
      # way.
      - name: Re-Arrange Binaries
        shell: bash
        run: |
          mv x86_64-unknown-linux-musl amd64
          mv aarch64-unknown-linux-musl arm64
          chmod 755 amd64/odyn amd64/enclaver-run arm64/odyn arm64/enclaver-run

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Authenticate to Google Cloud
        uses: 'google-github-actions/auth@v0'
        with:
          workload_identity_provider: 'projects/77991489452/locations/global/workloadIdentityPools/gh-actions-identity-pool/providers/gh-actions-identity-provider'
          service_account: 'github-actions-service-account@edgebit-containers.iam.gserviceaccount.com'

      - name: Configure Docker Auth
        run: |
          gcloud auth configure-docker us-docker.pkg.dev

      - name: Build Odyn Image
        uses: docker/build-push-action@v3
        with:
          context: "{{defaultContext}}:build/dockerfiles"
          build-contexts: artifacts=.
          file: odyn-release.dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: us-docker.pkg.dev/edgebit-containers/containers/odyn:latest

      - name: Build Runtime Base Image
        uses: docker/build-push-action@v3
        with:
          context: "{{defaultContext}}:build/dockerfiles"
          build-contexts: artifacts=.
          file: runtimebase.dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: us-docker.pkg.dev/edgebit-containers/containers/enclaver-wrapper-base:latest
